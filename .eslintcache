[{"F:\\All-project\\redux-practice\\src\\index.js":"1","F:\\All-project\\redux-practice\\src\\reportWebVitals.js":"2","F:\\All-project\\redux-practice\\src\\App.js":"3","F:\\All-project\\redux-practice\\src\\Components\\ReducerCount\\ReducerCount.js":"4","F:\\All-project\\redux-practice\\src\\Components\\PatientReducer\\PatientReducer.js":"5","F:\\All-project\\redux-practice\\src\\Components\\PatientManagement\\PatientManagement.js":"6","F:\\All-project\\redux-practice\\src\\Reducer\\PatientReducer.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":449,"mtime":1606306019436,"results":"11","hashOfConfig":"9"},{"size":830,"mtime":1606303376961,"results":"12","hashOfConfig":"9"},{"size":195,"mtime":1606303974956,"results":"13","hashOfConfig":"9"},{"size":1132,"mtime":1606653074839,"results":"14","hashOfConfig":"9"},{"size":640,"mtime":1606652323340,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1hrfbcg",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\All-project\\redux-practice\\src\\index.js",[],["32","33"],"F:\\All-project\\redux-practice\\src\\reportWebVitals.js",[],"F:\\All-project\\redux-practice\\src\\App.js",["34","35"],"F:\\All-project\\redux-practice\\src\\Components\\ReducerCount\\ReducerCount.js",["36","37"],"import React, { useReducer, useState } from 'react';\r\n\r\nconst initialState = {count: 0}\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'INCREMENT':\r\n            return {count: state.count + 1}\r\n\r\n        case 'DECREMENT':\r\n            return {count: state.count - 1}\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ReducerCount = () => {\r\n    const [count, setCount] = useState(0);\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    return (\r\n        <div>\r\n            <h1>This is Reducer Count: {state.count}</h1>\r\n            <button onClick={()=> dispatch({type: 'INCREMENT'})}>increment</button>\r\n            <button onClick={()=> dispatch({type: 'DECREMENT'})}>decrement</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReducerCount;","F:\\All-project\\redux-practice\\src\\Components\\PatientReducer\\PatientReducer.js",[],"F:\\All-project\\redux-practice\\src\\Components\\PatientManagement\\PatientManagement.js",[],"F:\\All-project\\redux-practice\\src\\Reducer\\PatientReducer.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":22},{"ruleId":"42","severity":1,"message":"47","line":19,"column":12,"nodeType":"44","messageId":"45","endLine":19,"endColumn":17},{"ruleId":"42","severity":1,"message":"48","line":19,"column":19,"nodeType":"44","messageId":"45","endLine":19,"endColumn":27},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'PatientReducer' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]